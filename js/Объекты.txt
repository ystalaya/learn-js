Синтаксис создания объекта
let user = new Object(); // синтаксис "конструктор объекта"
let user = {};  // синтаксис "литерал объекта" 
___________________________________________________________
Помещаем в объект свойства 
let user = {     // объект
  name: "John",  // под ключом "name" хранится значение "John"
  age: 30        // под ключом "age" хранится значение 30
};
___________________________________________________________
Обращение к объекту
// получаем свойства объекта:
alert( user.name ); // John
alert( user.age ); // 30
___________________________________________________________
для удаления свойства 
delete user.age;
___________________________________________________________
Имя свойства может состоять из нескольких слов, но тогда оно должно быть заключено в кавычки:

let user = {
  name: "John",
  age: 30,
  "likes birds": true  // имя свойства из нескольких слов должно быть в кавычках
};
Для свойств, имена которых состоят из нескольких слов, доступ к значению «через точку» не работает:

// это вызовет синтаксическую ошибку
user.likes birds = true

чтоб вызвать нужно заключить в квадратные скобки 

let user = {};

// присваивание значения свойству
user["likes birds"] = true;

// получение значения свойства
alert(user["likes birds"]); // true

// удаление свойства
delete user["likes birds"];

let key = "likes birds";

// то же самое, что и user["likes birds"] = true;
user[key] = true;
___________________________________________________________

Проверка наличия свойства в объекте 
let user = { name: "John", age: 30 };

alert( "age" in user ); // true, user.age существует
alert( "blabla" in user ); // false, user.blabla не существует

Если мы опускаем кавычки, это значит, что мы указываем переменную, в которой находится имя свойства. Например:

let user = { age: 30 };

let key = "age";
alert( key in user ); // true, имя свойства было взято из переменной key
___________________________________________________________
Перебор всех объектов 
for (key in object) {
  // тело цикла выполняется для каждого свойства объекта
}

Пример: 
let user = {
  name: "John",
  age: 30,
  isAdmin: true
};

for (let key in user) {
  // ключи
  alert( key );  // name, age, isAdmin
  // значения ключей
  alert( user[key] ); // John, 30, true
}
____________________________________________________________
копирование по ссылке 
let message = "Hello!";
let phrase = message;
Переменная хранит не сам объект, а его «адрес в памяти», другими словами «ссылку» на него.
Когда переменная объекта копируется – копируется ссылка, сам же объект не дублируется.
____________________________________________________________















